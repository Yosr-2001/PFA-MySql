networks:
  ecommerce-net:
    driver: bridge
    
volumes:
  product-db-data:
  order-db-data:
  inventory-db-data:
  payment-db-data:
  
services:
  eureka-server:
    build:
      context: ./eureka-server/eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports: 
      - "8761:8761"
    networks:
      - ecommerce-net
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 10s 
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./api-gateway/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8090:8090"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - ecommerce-net
    restart: on-failure
    
  ms-productdb:
    image: mysql:8
    container_name: ms-productdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms-productdb
    ports:
      - "3306:3306"
    networks:
      - ecommerce-net
    volumes:
      - product-db-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ms-orderdb:
    image: mysql:8
    container_name: ms-orderdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms-orderdb
    ports:
      - "3307:3306"
    networks:
      - ecommerce-net
    volumes:
      - order-db-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ms-inventorydb:
    image: mysql:8
    container_name: ms-inventorydb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms-inventorydb
    ports:
      - "3308:3306"
    networks:
      - ecommerce-net
    volumes:
      - inventory-db-data:/var/lib/mysql  
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ms-paymentdb:
    image: mysql:8
    container_name: ms-paymentdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms-paymentdb
    ports:
      - "3309:3306"
    networks:
      - ecommerce-net
    volumes:
      - payment-db-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5


  product-service:
    build:
      context: ./product-service/product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_healthy
      ms-productdb:
        condition: service_healthy
    networks:
      - ecommerce-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms-productdb:3306/ms-productdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    restart: on-failure

  order-service:
    build:
      context: ./order-service/order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8079:8079"
    depends_on:
      eureka-server:
        condition: service_healthy
      ms-orderdb:
        condition: service_healthy
    networks:
      - ecommerce-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms-orderdb:3306/ms-orderdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    restart: on-failure

  inventory-service:
    build:
      context: ./inventory-service/inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "8083:8083"
    depends_on:
      eureka-server:
        condition: service_healthy
      ms-inventorydb:
        condition: service_healthy
    networks:
      - ecommerce-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms-inventorydb:3306/ms-inventorydb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    restart: on-failure

  payment-service:
    build:
      context: ./payment-service/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8084:8084"
    depends_on:
      eureka-server:
        condition: service_healthy
      ms-paymentdb:
        condition: service_healthy
    networks:
      - ecommerce-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms-paymentdb:3306/ms-paymentdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root


    restart: on-failure

